{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport { useState } from 'react';\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction GoalInput(props) {\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    enteredGoalText = _useState2[0],\n    setEnteredGoalText = _useState2[1];\n  function goalInputHandle(enteredText) {\n    setEnteredGoalText(enteredText);\n  }\n  function addGoalHandle() {\n    props.onAddGoal(enteredGoalText);\n    setEnteredGoalText('');\n  }\n  return _jsx(Modal, {\n    visible: props.visible,\n    animationType: \"slide\",\n    children: _jsxs(View, {\n      style: styles.inputContainer,\n      children: [_jsx(Image, {\n        source: require(\"../assets/images/sticky-note.png\"),\n        style: styles.image\n      }), _jsx(TextInput, {\n        placeholder: \"Seu T\\xF3pico\",\n        style: styles.textInput,\n        onChangeText: goalInputHandle,\n        value: enteredGoalText\n      }), _jsxs(View, {\n        style: styles.buttonContainer,\n        children: [_jsx(View, {\n          style: styles.button,\n          children: _jsx(Pressable, {\n            onPress: props.onCancel,\n            style: function style(_ref) {\n              var pressed = _ref.pressed;\n              return [styles.customButton, pressed && styles.pressedButton];\n            },\n            children: _jsx(Text, {\n              style: styles.buttonText,\n              children: \"Cancelar\"\n            })\n          })\n        }), _jsx(View, {\n          style: styles.button,\n          children: _jsx(Button, {\n            onPress: addGoalHandle,\n            title: \"Salvar\",\n            color: \"#b180f0\"\n          })\n        })]\n      })]\n    })\n  });\n}\nexport default GoalInput;\nvar styles = StyleSheet.create({\n  inputContainer: {\n    flex: 1,\n    padding: 16,\n    alignItems: 'center',\n    backgroundColor: '#1e085a'\n  },\n  image: {\n    width: 100,\n    height: 100,\n    margin: 100\n  },\n  textInput: {\n    borderWidth: 1,\n    borderColor: '#e4d0ff',\n    backgroundColor: '#e4d0ff',\n    color: \"#120438\",\n    borderRadius: 6,\n    width: '100%',\n    padding: 16\n  },\n  buttonContainer: {\n    marginTop: 16,\n    flexDirection: \"row\"\n  },\n  button: {\n    width: \"40%\",\n    marginHorizontal: 8\n  }\n});","map":{"version":3,"names":["useState","jsx","_jsx","jsxs","_jsxs","GoalInput","props","_useState","_useState2","_slicedToArray","enteredGoalText","setEnteredGoalText","goalInputHandle","enteredText","addGoalHandle","onAddGoal","Modal","visible","animationType","children","View","style","styles","inputContainer","Image","source","require","image","TextInput","placeholder","textInput","onChangeText","value","buttonContainer","button","Pressable","onPress","onCancel","_ref","pressed","customButton","pressedButton","Text","buttonText","Button","title","color","StyleSheet","create","flex","padding","alignItems","backgroundColor","width","height","margin","borderWidth","borderColor","borderRadius","marginTop","flexDirection","marginHorizontal"],"sources":["C:/Users/c159943/React/GoalAppReactNative/components/GoalInputs.js"],"sourcesContent":["import { View, Button, TextInput, StyleSheet, Modal, Image } from 'react-native';\r\nimport { useState } from 'react';\r\n\r\n\r\nfunction GoalInput(props) {\r\n  const [enteredGoalText, setEnteredGoalText] = useState('');\r\n\r\n  function goalInputHandle(enteredText) {\r\n    setEnteredGoalText(enteredText);\r\n  }\r\n\r\n  function addGoalHandle() {\r\n    props.onAddGoal(enteredGoalText);\r\n    setEnteredGoalText('');\r\n  }\r\n\r\n  return (\r\n    <Modal visible={props.visible} animationType=\"slide\" >\r\n      <View style={styles.inputContainer}>\r\n        <Image source={require('../assets/images/sticky-note.png')} style={styles.image} />\r\n        <TextInput\r\n          placeholder=\"Seu TÃ³pico\"\r\n          style={styles.textInput}\r\n          onChangeText={goalInputHandle}\r\n          value={enteredGoalText}\r\n        />\r\n        <View style={styles.buttonContainer}>\r\n          <View style={styles.button}>\r\n            \r\n            \r\n<Pressable onPress={props.onCancel} style={({ pressed }) => [\r\nstyles.customButton,\r\npressed && styles.pressedButton\r\n]}>\r\n  \r\n<Text style={styles.buttonText}>Cancelar</Text>\r\n</Pressable>\r\n\r\n\r\n\r\n          </View>\r\n          <View style={styles.button}>\r\n            <Button onPress={addGoalHandle} title=\"Salvar\" color=\"#b180f0\" />\r\n          </View>\r\n        </View>\r\n      </View>\r\n    </Modal>\r\n  );\r\n}\r\n\r\nexport default GoalInput;\r\n\r\nconst styles = StyleSheet.create({\r\n  inputContainer: {\r\n    flex: 1,\r\n    padding:16,\r\n    alignItems: 'center',\r\n    backgroundColor: '#1e085a'\r\n  },\r\n  image: {\r\n    width: 100,\r\n    height: 100,\r\n    margin: 100\r\n  },\r\n  textInput: {\r\n    borderWidth: 1,\r\n    borderColor: '#e4d0ff',\r\n    backgroundColor: '#e4d0ff',\r\n    color: \"#120438\",\r\n    borderRadius: 6,\r\n    width: '100%',\r\n    padding: 16,\r\n  },\r\n  buttonContainer: {\r\n    marginTop: 16,\r\n    flexDirection: \"row\"\r\n  },\r\n  button: {\r\n    width: \"40%\",\r\n    marginHorizontal: 8  \r\n  },\r\n});\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}